Cluster
==================

The software supports two different kinds of cluster method. The "kmeans++", and "kmedoids" methods.

`cluster` namelist
------------------

The check namelist has following parameters:

Necessary Parameters

--------------------

:ncluster: **integer** The cluster number needed to be specified first when dealing with clustering
:clustermethod: **characther** The clustermethod, supports two kinds method: "kmeans" and "kmedoids"
:datafile: **characther** The data file
:ndim: **integer** The dimension of data file
:nsnap: **integer** The frames(snaps) of data

Optional Parameters

-------------------

    :clustercycle: the maximum number of steps to do the clustering

Example
------------
The example of cluster namelist shows below ::

    &cluster
        ncluster = 100, 
        clustercycle = 200, 
        clustermethod="kmeans", 
        datafile="data.txt",
        ndim = 2, 
        nsnap = 100000
    /

Input File Format
-----------------

============ ============ =======
CV1           CV2         ...
============ ============ =======
1.87         2.03         ...
-0.84        0.22         ...
0.14         0.71         ...
-9.37        -0.19        ...
0.75         -0.32        ...
...          ...           ...
============ ============ =======

    - CV : collective variable  coordinates


Output File Format
------------------

=============   ================
cluster index   CenterSnap Index
=============   ================
          51       74514
          72       65192
          32       87220
          73       47693
          94       51648
          79       38883
          21       23766
        ....      ....
=============   ================

    - **cluster index**: the cluser index to which the frams belongs
    - **CenterSnap Index**: the center snap index of current cluster


Run the `cluster` command
--------------------------

There are several ways to run the `cluster` command. Default input file is "cluster.in"ï¼Œand default output file is "cluster.out"
The user can provide the input file by `-i` with input file, and `-o` with output file. 

The "kmeans" method of `cluster` module supports MPI, so support the number of process behind `-n` option when using the "kmeans" method



.. code-block:: bash

    ./msm.x cluster 
    ./msm.x cluster -i file.in -o file.out
    mpirun -n 4 ./msm.x cluster