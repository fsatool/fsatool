Mixing REMD with FSATOOL
###############################

Aim
=========
The aim of this tutorial is to train users to perform **Mixing REMD** simulation with FSATOOL.

Introduction
================
We will perform Mixing REMD simlation with FSATOOL for a small short peptide, Alanine dipeptide( **Ala** ), 
in implicit solvent in this tutorail. The sequence is acetyl (ACE)-ALA-N-methyl (NME) :ref:`Ala_image`. The free energy
landscape of this molecule is simple and it has been studied extensively. Two collective variables( **CVs** ): backbone
angle **Φ** and **Ψ**, are good indicators of the different states of Ala.

.. _Ala_image:

.. figure:: C:\\Users\\zhz\\Pictures\\sphinx\\ala.png
   :target: C:\\Users\\zhz\\Pictures\\sphinx\\ala.png

   The picture of Alanine dipeptide

Pre-prepared files
=======================
To start this tutorial, we need a **prmtop** file and a **coordinates** file. You can use the **Leap** program in AMBER to
generate them ( *If you have any questions, you can refer to the AMBER 
tutorial: http://ambermd.org/tutorials/basic/tutorial0/index.htm* ), or click
:download:`ala.top <..\\..\\files\\ala.top>` :download:`ala.rst <..\\..\\files\\ala.rst>` to download the files.

Prepare the input file
==========================

Collective variables
------------------------

In **Mixing REMD**, We will perform Adaptively Biased Molecular Dynamics( **ABMD** ) for fast sampling in the CVs space .
Here we choose the backbone dihedral ( **Φ** and **Ψ** ) as the CVs. 
The CVs are defined in the ``colvar`` namelist in AMBER. The CV of **Φ** is defined as follow :
::

    &colvar
      cv_type = 'TORSION'
      cv_min=-3.2, cv_max=3.2
      cv_ni = 4
      cv_i= 5, 7, 9, 15         ! Φ
    /


This section contain a ``cv_type`` keyword along with a string of ``TORSION`` and a list of 
integers following ``cv_i`` keyword  which represents the indexes of atoms (the number of integers
is defined by cv_ni) . It will calculat that dihedral angle (in radians) formed by atoms with 
indexes 5, 7, 9 and 15 which is called **Φ** here. ``cv_max`` and ``cv_min`` defined the largest and smallest desired 
value of CVs. For more information, please refer to AMBER18: https://ambermd.org/doc12/Amber18.pdf 

Similarly, the CV of **Ψ** is defined as follow :
::

    &colvar
      cv_type = 'TORSION'
      cv_min=-3.2, cv_max=3.2
      cv_ni = 4
      cv_i=  7, 9, 15, 17       ! Ψ
    /

Necessary Parameters
------------------------
::

    &task
      ifflood=.true.
    /

This section represents that we will perform Mixing REMD.

::

    &cntrl
     imin=0, ntb=0, igb=8, ntpr=1000, ntwr=10000, ntwx=10000
     ntt=3, tempi = 300.0, temp0 = 300.0, ig=-1, gamma_ln=1.0
     ntf=2, ntc=2, nstlim=100000000, dt=0.002, cut=999.0
    /

This section includes several settings for **regular molecular dynamics sampling**. We performed simlation with 
implicit solvent which is represented by the generalized Born model(``igb=8``). It will print the potential energy and CVs 
which are defined in the input file to *"procinfo/procinfo_\*txt"* every 1000 steps(``ntpr=1000``). It will 
save the trajectory snapshots as *"procinfo/traj_\*.nc"* every 10000 steps(``ntwx=10000``). And each of the replicas will perform 
200000000 MD steps(``nstlim=100000000``) in this simulation.

::

    &flood
      kelvindown=300.0, kelvinup=700.0, exchangestep=500000, biasrep=1, biasexc=1
      ss2cv=1,2, ssngrid=60, 60, floodingtime=10.0
    /

This section includes several settings for **Mixing REMD**. We will set several replics at different temperatures in REMD replicas.
The number of REMD replicas is determined by the number of gpu allocated. In this tutorial, there are 5 GPUs allocated. So FSATOOL will 
assign 3 GPUs to 3 REMD replicas (the other two are assigned to ABMD replica and equilibrium replica) automatically between 
300 *K* (``kelvindown=300``) to 700 *K* (``kelvinup=700``). The exchange step between REMD replicas, Equilibrium replica and 
the highest temperature replica is set to 500000 step(``exchangestep=500000``). The other parameters of **Mixing REMD** can see 
https://fsatool.github.io/fsatool/SamplingModule/Mixing_REMD.html. 

Now we have prepared all the information for input file. We should submit this task to GPUs for running. Here we provide
a :download:`job.sh <..\\..\\files\\job.sh>` file for submitting this task. 

Running the simulation
==============================
We have prepared three files for running the simulation: :download:`ala.top <..\\..\\files\\ala.top>` 
:download:`ala.rst <..\\..\\files\\ala.rst>` and :download:`job.sh <..\\..\\files\\job.sh>`. Now we can submit this task by
typing:

::

    >sbatch job.sh

Now simulation was start. It will take several hours to run this Mixing REMD. You can download 
the output files by click :download:`Here <..\\..\\files\\output_filefiles.rar>`.

Analyze the MD results 
==============================
After the simulation, we will get 5 information files named ``"procinfo_[0-4].txt"``, 5 trajectory files named
``"traj_[0-4].mdcrd"``, 5 collective variable surface files named ``"surfacedata_[0-4].txt"`` and a ``"kelvin_exchangerate.txt"``
file which recorded the exchange rate between each replica. 

Output File Format
-------------------

- *procinfo/procinfo_0.txt*

The information file for each replica

=====   =============  ===========  =============  ============
time    process index   potential   CV1( **Φ** )   CV2( **Ψ** )
=====   =============  ===========  =============  ============
0.002    0             -23.547       -2.585           2.897
0.004    0             -26.371       -1.425           2.551
0.006    0             -22.924       -1.635           2.444
0.008    0             -23.305       -1.379           2.969
0.010    0             -22.960       -2.848           2.701
...     ...             ...         ...
=====   =============  ===========  =============  ============


- *procinfo/traj_0.mdcrd*

The trajectory file for each replica

- *procinfo/surfacedata_0.txt*

The collective variable surface of each replica

- *procinfo/kelvin_exchangerate.txt*

The exchange rate between each replica

The output data of Mixing-REMD sampling is collected from each replica. When the exchange happens, 
the temperature at each replica is swapped. If we want to analyze the trajectory in each temperature, 
the trajectory file and information file of Mixing-REMD should be extracted and distribute among
each temperature. 


Extract trajectory and information files
-------------------------------------------
The extract module of FSATOOL can extract the trajectory and information files in each temperature from 
Mixing REMD output files automatically. We should provide a input file named ``"extract.in"``.

::

    &trajs
      num_file = 5
      procFile = "../procinfo_0.txt", "../procinfo_1.txt",
                 "../procinfo_2.txt", "../procinfo_3.txt", "../procinfo_4.txt"
      ncv = 2
      trajFile = "../traj_0.mdcrd", "../traj_1.mdcrd",
                  "../traj_2.mdcrd", "../traj_3.mdcrd", "../traj_4.mdcrd"
    /

The total number of trajectory or information files is 5(``num_file=5``) and the number of collective variables 
in the “procinfo” file is 2(``ncv=2``). ``procFile`` and ``trajFile`` list the name of each trajectory and information files.
The output process file name is “levelinfo_0.txt” which has same format of “procinfo_0.txt”. The output trajectory file name 
is “level_0.nc” which has same format of “traj_0.mdcrd”

The changes of the CVs 
--------------------------
Plot these properties through the simulation using the following commands.

::

  > xmgrace -block levelinfo_0.txt -bxy 1:5
  > xmgrace -block levelinfo_0.txt -bxy 1:6


.. _Φ_image:

.. figure:: C:\\Users\\zhz\\Pictures\\sphinx\\Φ.png
   :target: C:\\Users\\zhz\\Pictures\\sphinx\\Φ.png

   The Φ of Alanine dipeptide

You can plot the free energy landscape of Alanine dipeptide at 300K by using a CPPTRAJ 
scripy :download:`cpptraj.log <..\\..\\files\\cpptraj.log>`.

::

  > cppytraj -i cpptraj.log -d levelinfo_0.txt
  > gnuplot free.gnu 

.. figure:: C:\\Users\\zhz\\Pictures\\sphinx\\free_energy.png
   :target: C:\\Users\\zhz\\Pictures\\sphinx\\free_energy.png

   The free_energy landscape of Alanine dipeptide at 300K.


You can plot the adaptive biasing potential of Alanine dipeptide by using a python 
scripy 




 



